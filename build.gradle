plugins {
    id 'java'
}

group = 'com.github.onacit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testRuntimeOnly 'ch.qos.logback:logback-classic:1.3.0-alpha14'
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.slf4j:slf4j-api:2.0.0-alpha6'
}

final TAG_LONG_RUNNING = "long-running"
final TEST_NAME_PATTERN_INTEGRATION = "*IT"

tasks.withType(Test) {
    testLogging.showStandardStreams = true
}

tasks.named('test') {
    useJUnitPlatform {
        excludeTags TAG_LONG_RUNNING
    }
    filter {
        excludeTestsMatching TEST_NAME_PATTERN_INTEGRATION
    }
}

// https://docs.gradle.org/current/samples/sample_jvm_multi_project_with_additional_test_types.html

tasks.register("testLongRunning", Test) {
    description = "Runs the unit tests with @Tag(\"" + TAG_LONG_RUNNING + "\")."
    group = 'verification'
    useJUnitPlatform {
        includeTags TAG_LONG_RUNNING
    }
    filter {
        excludeTestsMatching TEST_NAME_PATTERN_INTEGRATION
    }
    shouldRunAfter(test)
}

tasks.register("integrationTest", Test) {
    description = "Runs the integratin tests without @Tag(\"" + TAG_LONG_RUNNING + "\")."
    group = 'verification'
    useJUnitPlatform {
        excludeTags TAG_LONG_RUNNING
    }
    filter {
        includeTestsMatching TEST_NAME_PATTERN_INTEGRATION
    }
    shouldRunAfter(test)
}

tasks.register("integrationTestLongRunning", Test) {
    description = "Runs the integration tests with @Tag(\"" + TAG_LONG_RUNNING + "\")."
    group = 'verification'
    useJUnitPlatform {
        includeTags TAG_LONG_RUNNING
    }
    filter {
        includeTestsMatching TEST_NAME_PATTERN_INTEGRATION
    }
    shouldRunAfter(integrationTest)
}